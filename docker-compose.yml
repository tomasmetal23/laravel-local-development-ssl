version: '3.4'

services:

  reverse-proxy:
    image: traefik:v2.5
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      # Web
      - 80:80
      - 443:443
    volumes:
     ##Podman
      - /run/podman/podman.sock:/var/run/docker.sock:ro
      ##Rootless Podman
      #- /run/user/1000/podman/podman.sock:/var/run/docker.sock:ro
      ##Docker
      #- /var/run/docker.sock:/var/run/docker.sock:ro
      # Map the static configuration into the container
      - ./traefik-v2-https-ssl-localhost/config/static.yml:/etc/traefik/traefik.yml:ro
      # Map the dynamic configuration into the container
      - ./traefik-v2-https-ssl-localhost/config/dynamic.yml:/etc/traefik/dynamic.yml:ro
      # Map the certificats into the container
      - ./traefik-v2-https-ssl-localhost/certs:/etc/certs:ro
    networks:
      - web
      #Podman Privileges
    #command:
    #  - "--security-opt label=disable"
    #privileged: true   

  mariadb:
    image: docker.io/bitnami/mariadb:latest
    env_file:
      - .env
    environment:
      #- ALLOW_EMPTY_PASSWORD=yes
      - MARIADB_USER=$MARIADB_USER
      - MARIADB_ROOT_PASSWORD=$MARIADB_ROOT_PASSWORD
      - MARIADB_PASSWORD=$MARIADB_PASSWORD
      - MARIADB_DATABASE=$MARIADB_DATABASE
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mariadb/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6
    volumes:
      - 'mariadb_data:/bitnami/mariadb'
    networks:
      - database


  adminer:
    image: adminer:4.8.0-standalone
    env_file:
      - .env
    labels:
       # Enable this container to be mapped by traefik
      # For more information, see: https://docs.traefik.io/providers/docker/#exposedbydefault
      - "traefik.enable=true"
      # Define the network that should be used
      - "traefik.docker.network=web"
      # URL to reach this container
      - "traefik.http.routers.adminer.rule=Host(`$ADMINERDOMAIN`)"
      # Activation of TLS
      - "traefik.http.routers.adminer.tls=true"
      # If port is different than 80, use the following service:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
      
    networks:
      - database
      - web
    depends_on:
      - mariadb
      
  my-laravel-app:
    image: laravel-proxy-in-local-storage
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    ports:
      - '8000'
    environment:
      DB_HOST: mariadb
      DB_PORT: 3306
      DB_USERNAME: $MARIADB_USER
      DB_DATABASE: $MARIADB_DATABASE
      DB_PASSWORD: $MARIADB_PASSWORD
    labels:
        # Enable this container to be mapped by traefik
      # For more information, see: https://docs.traefik.io/providers/docker/#exposedbydefault
      - "traefik.enable=true"
      # Define the network that should be used
      - "traefik.docker.network=web"
      # URL to reach this container
      - "traefik.http.routers.my-laravel-app.rule=Host(`$APPDOMAIN`)"
      # Activation of TLS
      - "traefik.http.routers.my-laravel-app.tls=true"
      # If port is different than 80, use the following service:
      - "traefik.http.services.my-laravel-app.loadbalancer.server.port=8000"
      
    volumes:
      - './APP:/app'
    networks:
      - database
      - web      
    depends_on:
      - mariadb
  
  ### descomentar en caso de querer desplegar portainer
  #portainer:
  #  image: portainer/portainer
  #  container_name: portainer
  #  hostname: portainer
  #  env_file:
  #    - variables.env
  #  volumes:
        #Podman
  #    - /run/podman/podman.sock:/var/run/docker.sock:ro
  #    - /var/run/docker.sock:/var/run/docker.sock:ro
  #    - portainer_data:/data
  #  labels:
          # Enable this container to be mapped by traefik
      # For more information, see: https://docs.traefik.io/providers/docker/#exposedbydefault
     # - "traefik.enable=true"
      # Define the network that should be used
     # - "traefik.docker.network=web"
      # URL to reach this container
     # - "traefik.http.routers.portainer.rule=Host(`$PORTAINERDOMAIN`)"
      # Activation of TLS
     # - "traefik.http.routers.portainer.tls=true"
      # If port is different than 80, use the following service:
     # - "traefik.http.services.portainer.loadbalancer.server.port=8000"
 
networks:
  web:
    external: true

  database:
    external: false

volumes:
  #portainer_data:
  mariadb_data:
    driver: local